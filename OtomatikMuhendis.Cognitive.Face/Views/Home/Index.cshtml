@{
    ViewData["Title"] = "Emotions to emoticons";
}


<div class="container">
    <div class="row">
        <div class="col">
            <h3>How do you feel today?</h3>
        </div>
    </div>
    <div class="row">
        <div class="col-9">
            <div id="wrap_video">
                <div id="video_box">
                    <div id="video_overlays"><img src="~/asset/smileys/neutral.png" id="imgResult"/></div>
                    <div>
                        <video width=800 height=600 id="video" controls autoplay></video>
                    </div>
                </div>
            </div>
        </div>
        <div class="col">
            <p>The detailed emotion analysis is visible here. The one with the max intensity is turned into an emoticon on the left hand side.</p>
            <div class="progress">
                <div id="prg_surprise" class="progress-bar bg-success" role="progressbar" style="width: 1%" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100">surprise</div>
            </div>
            <div class="progress">
                <div id="prg_happiness" class="progress-bar bg-success" role="progressbar" style="width: 1%" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100">happiness</div>
            </div>
            <div class="progress">
                <div id="prg_neutral" class="progress-bar bg-info" role="progressbar" style="width: 1%" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100">neutral</div>
            </div>
            <div class="progress">
                <div id="prg_sadness" class="progress-bar bg-warning" role="progressbar" style="width: 1%" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100">sadness</div>
            </div>
            <div class="progress">
                <div id="prg_contempt" class="progress-bar bg-warning" role="progressbar" style="width: 1%" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100">contempt</div>
            </div>
            <div class="progress">
                <div id="prg_disgust" class="progress-bar bg-warning" role="progressbar" style="width: 1%" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100">disgust</div>
            </div>
            <div class="progress">
                <div id="prg_anger" class="progress-bar bg-danger" role="progressbar" style="width: 1%" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100">anger</div>
            </div>
            <div class="progress">
                <div id="prg_fear" class="progress-bar bg-danger" role="progressbar" style="width: 1%" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100">fear</div>
            </div>
        </div>
    </div>
</div>




<canvas id="canvas" width="800" height="600" style="display:none;"></canvas>


@section Scripts{
    <script>
        //--------------------
        // GET USER MEDIA CODE
        //--------------------
        navigator.getUserMedia = (navigator.getUserMedia ||
            navigator.webkitGetUserMedia ||
            navigator.mozGetUserMedia ||
            navigator.msGetUserMedia);

        var video;
        var webcamStream;

        function startWebcam() {
            if (navigator.getUserMedia) {
                navigator.getUserMedia(

                    // constraints
                    {
                        video: true,
                        audio: false
                    },

                    // successCallback
                    function (localMediaStream) {
                        video = document.querySelector('video');

                        if (window.webkitURL) {
                            video.srcObject = localMediaStream;
                        } else {
                            video.src = stream;
                        }

                        webcamStream = localMediaStream;
                    },

                    // errorCallback
                    function (err) {
                        console.log("The following error occured: " + err);
                    }
                );
            } else {
                console.log("getUserMedia not supported");
            }

            setInterval(sendToServer, 2000);
        }

        var canvas, ctx;

        function init() {
            // Get the canvas and obtain a context for
            // drawing in it
            canvas = document.getElementById("canvas");
            ctx = canvas.getContext('2d');

            startWebcam();
        }

        function snapshot() {
            // Draws current image from the video element into the canvas
            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
        }

        document.addEventListener("DOMContentLoaded", init);

        function sendToServer() {
            snapshot();

            var image = document.getElementById("canvas").toDataURL("image/png");
            image = image.replace('data:image/png;base64,', '');
            $.ajax({
                type: 'POST',
                url: '/Home/Face',
                data: '{ "imageData" : "' + image + '" }',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (data) {
                    if (data) {
                        var maxValue = 0;
                        var maxName = 'neutral';

                        $('.progress-bar').width('1%');

                        $.each(data, function (i, n) {
                            if (n > maxValue) {
                                maxValue = n;
                                maxName = i;
                            }
                            
                            $('#prg_' + i).width((n * 100) + '%');

                        });

                        $("#imgResult").attr("src", "/asset/smileys/" + maxName + ".png");

                        console.log(JSON.stringify(data));
                    }
                }
            });
        }
    </script>
}
